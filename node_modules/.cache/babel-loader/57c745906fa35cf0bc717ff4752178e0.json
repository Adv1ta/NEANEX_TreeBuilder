{"ast":null,"code":"var _jsxFileName = \"E:\\\\ROEL\\\\CODING\\\\REACT\\\\REACT_CYPHERBUILDER\\\\cypher-builder\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Inputs from \"./components/inputs.jsx\";\nimport \"./App.css\";\nlet newKey = 0;\nconst initState = {\n  inputs: [{\n    id: 0,\n    annotation1: \"\",\n    lifecycle1: \"\",\n    annotation2: \"\",\n    lifecycle2: \"\",\n    relation: \"\"\n  }]\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initState;\n\n    this.handleChange = (inputValue, rowIndex, fieldName) => {\n      const inputs = [...this.state.inputs];\n      inputs[rowIndex][fieldName] = inputValue.value;\n      this.setState({\n        inputs\n      });\n    };\n\n    this.handleAdd = () => {\n      console.log(\"Added an input\");\n      newKey++;\n      const newInput = {\n        id: newKey,\n        annotation1: \"\",\n        lifecycle1: \"\",\n        annotation2: \"\",\n        lifecycle2: \"\",\n        relation: \"\"\n      };\n      const inputs = [...this.state.inputs].concat(newInput);\n      this.setState({\n        inputs\n      });\n    };\n\n    this.handleDelete = inputId => {\n      console.log(inputId);\n      const inputs = this.state.inputs.filter(c => c.id !== inputId);\n      this.setState({\n        inputs\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState(initState);\n    };\n  }\n\n  render() {\n    console.log(this.state.inputs);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"QUERY BUILDER\"), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Inputs, {\n      inputs: this.state.inputs,\n      onAdd: this.handleAdd,\n      onDelete: this.handleDelete,\n      onReset: this.handleReset,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InputBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Query:\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/ROEL/CODING/REACT/REACT_CYPHERBUILDER/cypher-builder/src/App.js"],"names":["React","Component","Inputs","newKey","initState","inputs","id","annotation1","lifecycle1","annotation2","lifecycle2","relation","App","state","handleChange","inputValue","rowIndex","fieldName","value","setState","handleAdd","console","log","newInput","concat","handleDelete","inputId","filter","c","handleReset","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Inputs from \"./components/inputs.jsx\";\nimport \"./App.css\";\n\nlet newKey = 0;\nconst initState = {\n  inputs: [\n    {\n      id: 0,\n      annotation1: \"\",\n      lifecycle1: \"\",\n      annotation2: \"\",\n      lifecycle2: \"\",\n      relation: \"\",\n    },\n  ],\n};\n\nclass App extends Component {\n  state = initState;\n\n  handleChange = (inputValue, rowIndex, fieldName) => {\n    const inputs = [...this.state.inputs];\n    inputs[rowIndex][fieldName] = inputValue.value;\n    this.setState({ inputs });\n  };\n\n  handleAdd = () => {\n    console.log(\"Added an input\");\n    newKey++;\n    const newInput = {\n      id: newKey,\n      annotation1: \"\",\n      lifecycle1: \"\",\n      annotation2: \"\",\n      lifecycle2: \"\",\n      relation: \"\",\n    };\n    const inputs = [...this.state.inputs].concat(newInput);\n    this.setState({ inputs });\n  };\n\n  handleDelete = (inputId) => {\n    console.log(inputId);\n    const inputs = this.state.inputs.filter((c) => c.id !== inputId);\n    this.setState({ inputs });\n  };\n\n  handleReset = () => {\n    this.setState(initState);\n  };\n\n  render() {\n    console.log(this.state.inputs);\n    return (\n      <div>\n        <h1 className=\"App-header\">QUERY BUILDER</h1>\n        <main className=\"Main\">\n          <Inputs\n            inputs={this.state.inputs}\n            onAdd={this.handleAdd}\n            onDelete={this.handleDelete}\n            onReset={this.handleReset}\n            onChange={this.handleChange}\n          />\n        </main>\n        <div className=\"InputBox\">Query:</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}